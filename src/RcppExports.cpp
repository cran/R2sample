// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// TS_cont_cpp
NumericVector TS_cont_cpp(List dta, CharacterVector doMethod);
RcppExport SEXP _R2sample_TS_cont_cpp(SEXP dtaSEXP, SEXP doMethodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dta(dtaSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type doMethod(doMethodSEXP);
    rcpp_result_gen = Rcpp::wrap(TS_cont_cpp(dta, doMethod));
    return rcpp_result_gen;
END_RCPP
}
// TS_disc_cpp
NumericVector TS_disc_cpp(List dta, NumericVector ADweights, CharacterVector doMethod);
RcppExport SEXP _R2sample_TS_disc_cpp(SEXP dtaSEXP, SEXP ADweightsSEXP, SEXP doMethodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dta(dtaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ADweights(ADweightsSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type doMethod(doMethodSEXP);
    rcpp_result_gen = Rcpp::wrap(TS_disc_cpp(dta, ADweights, doMethod));
    return rcpp_result_gen;
END_RCPP
}
// bincounter_cpp
Rcpp::IntegerVector bincounter_cpp(Rcpp::NumericVector x, Rcpp::NumericVector bins);
RcppExport SEXP _R2sample_bincounter_cpp(SEXP xSEXP, SEXP binsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type bins(binsSEXP);
    rcpp_result_gen = Rcpp::wrap(bincounter_cpp(x, bins));
    return rcpp_result_gen;
END_RCPP
}
// chi_test_cont_cpp
Rcpp::List chi_test_cont_cpp(Rcpp::List dta, Rcpp::IntegerVector nbins);
RcppExport SEXP _R2sample_chi_test_cont_cpp(SEXP dtaSEXP, SEXP nbinsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type dta(dtaSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type nbins(nbinsSEXP);
    rcpp_result_gen = Rcpp::wrap(chi_test_cont_cpp(dta, nbins));
    return rcpp_result_gen;
END_RCPP
}
// chi_test_disc_cpp
Rcpp::List chi_test_disc_cpp(Rcpp::List dta, Rcpp::IntegerVector nbins);
RcppExport SEXP _R2sample_chi_test_disc_cpp(SEXP dtaSEXP, SEXP nbinsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type dta(dtaSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type nbins(nbinsSEXP);
    rcpp_result_gen = Rcpp::wrap(chi_test_disc_cpp(dta, nbins));
    return rcpp_result_gen;
END_RCPP
}
// perm_test_cpp
List perm_test_cpp(NumericVector x, NumericVector y, NumericVector vals, IntegerVector nbins, int B, CharacterVector doMethod);
RcppExport SEXP _R2sample_perm_test_cpp(SEXP xSEXP, SEXP ySEXP, SEXP valsSEXP, SEXP nbinsSEXP, SEXP BSEXP, SEXP doMethodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vals(valsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nbins(nbinsSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type doMethod(doMethodSEXP);
    rcpp_result_gen = Rcpp::wrap(perm_test_cpp(x, y, vals, nbins, B, doMethod));
    return rcpp_result_gen;
END_RCPP
}
// permute_cont_cpp
List permute_cont_cpp(List dta);
RcppExport SEXP _R2sample_permute_cont_cpp(SEXP dtaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dta(dtaSEXP);
    rcpp_result_gen = Rcpp::wrap(permute_cont_cpp(dta));
    return rcpp_result_gen;
END_RCPP
}
// permute_disc_cpp
List permute_disc_cpp(List dta);
RcppExport SEXP _R2sample_permute_disc_cpp(SEXP dtaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dta(dtaSEXP);
    rcpp_result_gen = Rcpp::wrap(permute_disc_cpp(dta));
    return rcpp_result_gen;
END_RCPP
}
// power_cpp
NumericMatrix power_cpp(Function rxy, IntegerVector nbins, double alpha, int B, NumericVector xparam, NumericVector yparam, CharacterVector doMethod);
RcppExport SEXP _R2sample_power_cpp(SEXP rxySEXP, SEXP nbinsSEXP, SEXP alphaSEXP, SEXP BSEXP, SEXP xparamSEXP, SEXP yparamSEXP, SEXP doMethodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Function >::type rxy(rxySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type nbins(nbinsSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xparam(xparamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yparam(yparamSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type doMethod(doMethodSEXP);
    rcpp_result_gen = Rcpp::wrap(power_cpp(rxy, nbins, alpha, B, xparam, yparam, doMethod));
    return rcpp_result_gen;
END_RCPP
}
// rep_cpp
Rcpp::NumericVector rep_cpp(Rcpp::NumericVector x, Rcpp::IntegerVector times);
RcppExport SEXP _R2sample_rep_cpp(SEXP xSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type times(timesSEXP);
    rcpp_result_gen = Rcpp::wrap(rep_cpp(x, times));
    return rcpp_result_gen;
END_RCPP
}
// weights_cpp
NumericVector weights_cpp(List dta);
RcppExport SEXP _R2sample_weights_cpp(SEXP dtaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dta(dtaSEXP);
    rcpp_result_gen = Rcpp::wrap(weights_cpp(dta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_R2sample_TS_cont_cpp", (DL_FUNC) &_R2sample_TS_cont_cpp, 2},
    {"_R2sample_TS_disc_cpp", (DL_FUNC) &_R2sample_TS_disc_cpp, 3},
    {"_R2sample_bincounter_cpp", (DL_FUNC) &_R2sample_bincounter_cpp, 2},
    {"_R2sample_chi_test_cont_cpp", (DL_FUNC) &_R2sample_chi_test_cont_cpp, 2},
    {"_R2sample_chi_test_disc_cpp", (DL_FUNC) &_R2sample_chi_test_disc_cpp, 2},
    {"_R2sample_perm_test_cpp", (DL_FUNC) &_R2sample_perm_test_cpp, 6},
    {"_R2sample_permute_cont_cpp", (DL_FUNC) &_R2sample_permute_cont_cpp, 1},
    {"_R2sample_permute_disc_cpp", (DL_FUNC) &_R2sample_permute_disc_cpp, 1},
    {"_R2sample_power_cpp", (DL_FUNC) &_R2sample_power_cpp, 7},
    {"_R2sample_rep_cpp", (DL_FUNC) &_R2sample_rep_cpp, 2},
    {"_R2sample_weights_cpp", (DL_FUNC) &_R2sample_weights_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_R2sample(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
